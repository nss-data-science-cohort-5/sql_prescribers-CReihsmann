--1. a. Which prescriber had the highest total number of claims (totaled over all drugs)? Report the npi and the total number of claims.
SELECT npi, sum(total_claim_count)
FROM prescription
GROUP BY npi
ORDER BY 2 DESC
LIMIT 1;

--1. b. Repeat the above, but this time report the nppes_provider_first_name, nppes_provider_last_org_name,  specialty_description, and the total number of claims.
SELECT nppes_provider_first_name, nppes_provider_last_org_name,  specialty_description, SUM(total_claim_count)
FROM prescriber
INNER JOIN prescription 
USING(npi)
GROUP BY 1, 2, 3
ORDER BY SUM(total_claim_count) DESC
LIMIT 1;

--2. a. Which specialty had the most total number of claims (totaled over all drugs)?
SELECT specialty_description, SUM(total_claim_count)
FROM prescriber
INNER JOIN prescription 
USING(npi)
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;
--2. b. Which specialty had the most total number of claims for opioids?
SELECT specialty_description, COUNT(opioid_drug_flag)
FROM (SELECT specialty_description, prescription.drug_name, opioid_drug_flag
FROM prescriber
FULL JOIN prescription 
USING(npi)
LEFT JOIN drug
USING(drug_name)) AS opiods
WHERE opioid_drug_flag = 'Y'
GROUP BY specialty_description
ORDER BY 2 DESC;

/* 
SELECT p1.specialty_description, 
	   SUM(p2.total_claim_count) AS total_specialty_claims
FROM prescriber AS p1
INNER JOIN prescription AS p2
ON p1.npi = p2.npi
INNER JOIN drug AS d
ON p2.drug_name = d.drug_name
WHERE d.opioid_drug_flag = 'Y'
GROUP BY p1.specialty_description
ORDER BY total_specialty_claims DESC
LIMIT 1;
*/

--2. c. **Challenge Question:** Are there any specialties that appear in the prescriber table that have no associated prescriptions in the prescription table?
SELECT specialty_description, COUNT(drug_name) AS numb_perscription
FROM prescriber p
FULL JOIN prescription
USING(npi)
GROUP BY specialty_description 
HAVING COUNT(drug_name) = 0
ORDER BY 2; --

--3. a. Which drug (generic_name) had the highest total drug cost?
SELECT generic_name, SUM(total_drug_cost)::MONEY
FROM prescription 
INNER JOIN drug
USING(drug_name)
GROUP BY generic_name
ORDER BY 2 DESC;
--3. b. Which drug (generic_name) has the hightest total cost per day? **Bonus: Round your cost per day column to 2 decimal places. Google ROUND to see how this works.
SELECT generic_name, ROUND(SUM(total_drug_cost)/ SUM(total_day_supply), 2)
FROM prescription 
JOIN drug
USING(drug_name)
GROUP BY generic_name
ORDER BY 2 DESC;

/*4. a. For each drug in the drug table, return the drug name and then a column named 'drug_type' 
which says 'opioid'for drugs which have opioid_drug_flag = 'Y', 
says 'antibiotic' for those drugs which have antibiotic_drug_flag = 'Y', 
and says 'neither' for all other drugs.*/
SELECT drug_name,
	CASE WHEN opioid_drug_flag = 'Y' THEN 'antibiotic'
	WHEN antibiotic_drug_flag = 'Y' THEN 'opioid'
	ELSE 'neither'
	END AS drug_type
FROM drug;
/*4. b.  Building off of the query you wrote for part a, determine whether 
more was spent (total_drug_cost) on opioids or on antibiotics. 
Hint: Format the total costs as MONEY for easier comparision.*/
SELECT drug_type, SUM(total_drug_cost)::MONEY
FROM(SELECT drug_name, total_drug_cost,
		CASE WHEN opioid_drug_flag = 'Y' THEN 'antibiotic'
		WHEN antibiotic_drug_flag = 'Y' THEN 'opioid'
		ELSE 'neither'
		END AS drug_type
	 FROM drug
	 FULL JOIN prescription 
	 USING(drug_name)) AS drug_bill
WHERE drug_type != 'neither'
GROUP BY drug_type

--5. a. How many CBSAs are in Tennessee? **Warning:** The cbsa table contains information for all states, not just Tennessee.
SELECT DISTINCT cbsa, cbsaname
FROM cbsa
JOIN fips_county
USING(fipscounty)
WHERE state = 'TN'

/*
SELECT COUNT(DISTINCT cbsa)
FROM cbsa
WHERE cbsaname LIKE '%, TN%';
*/

--b. Which cbsa has the largest combined population? Which has the smallest? Report the CBSA name and total population.
SELECT cbsaname, SUM(population) AS comb_pop
FROM cbsa AS c
JOIN fips_county AS f
USING(fipscounty)
JOIN population AS p
USING(fipscounty)
GROUP BY 1
ORDER BY 2 DESC;

--c. What is the largest (in terms of population) county which is not included in a CBSA? Report the county name and population.
SELECT county, population
FROM fips_county AS f
JOIN population AS p
USING(fipscounty)
FULL JOIN cbsa AS c
USING (fipscounty)
WHERE state = 'TN'
	AND cbsa IS NULL
ORDER BY 2 DESC;
	
--6. a. Find all rows in the prescription table where total_claims is at least 3000. Report the drug_name and the total_claim_count.
SELECT drug_name, total_claim_count
FROM prescription
WHERE total_claim_count >= 3000;

--b. For each instance that you found in part a, add a column that indicates whether the drug is an opioid.
SELECT drug_name, total_claim_count, opioid_drug_flag AS opioid
FROM (SELECT drug_name, total_claim_count
	FROM prescription
	WHERE total_claim_count >= 3000) AS c
JOIN drug
USING (drug_name)

--c. Add another column to you answer from the previous part which gives the prescriber first and last name associated with each row.
SELECT nppes_provider_first_name, nppes_provider_last_org_name, drug_name, total_claim_count, opioid
FROM(SELECT drug_name, total_claim_count, opioid_drug_flag AS opioid, npi
	FROM (SELECT drug_name, total_claim_count, npi
	FROM prescription
	WHERE total_claim_count >= 3000) AS c
	JOIN drug
	USING (drug_name)) AS c2
LEFT JOIN prescriber AS p
USING (npi)

--7. a.
SELECT npi, drug_name
FROM prescriber
CROSS JOIN drug
WHERE nppes_provider_city = 'NASHVILLE'
	AND specialty_description = 'Pain Management'
	AND opioid_drug_flag = 'Y'

--b.
SELECT npi, drug_name, COALESCE(total_claim_count, 0)
FROM(SELECT npi, drug_name
	FROM prescriber
	CROSS JOIN drug
	WHERE nppes_provider_city = 'NASHVILLE'
	AND specialty_description = 'Pain Management'
	AND opioid_drug_flag = 'Y') AS a
LEFT JOIN prescription
USING(npi, drug_name)
ORDER BY npi;

